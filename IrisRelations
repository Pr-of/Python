#Iris dataset is a very simple dataset with 4 features/variables ;(petal width/length, sepal length/width) of the flower species/classes (Virginica, Setosa, Versicolor). 
#Generally, using linear regression, we try to find a co-relation/predict a future outcome between the features in question.
#R-squared is a statistical measure that indicates how much of the variation of a dependent variable is explained by an independent variable in a regression model.
#In this example, we just derive co-relation between the various features with the help of R2 score

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn import datasets
from sklearn.metrics import r2_score

irisset= datasets.load_iris()
X= irisset.data[:150,2:3]
y= irisset.data[:150,3]
#Train R2 score = 0.9271098389904927
#There exists a "very strong" co-relation between petal length & petal width for all classes
#By "observing the graph" in Spyder IDE we can further deduce that between petal length (4-6) & 
#petal width(1.25-2.2) the species is "versicolor" and "virginica"

#X= irisset.data[:50,0:1]
#y= irisset.data[:50,1]
#Train R2 score = 0.5513755803923135
#There exists a co-relation between sepal length & width for the species "setosa (first 50 samples)"

#X= irisset.data[:150,0:1]
#y= irisset.data[:150,2]
#y= irisset.data[:150,3]
#Train R2 score = 0.759954645772515
#There exists a "strong" co-relation between sepal length & petal length for all classes
#Train R2 score = 0.6690276860464135
#There exists a co-relation between sepal length & petal width for all classes

#X= irisset.data[52:150,2:3]
#y= irisset.data[52:150,3]
#Train R2 score = 0.6779495186269922
#There exists a co-relation between petal length & petal width for classes "versicolor" & "virginica"

reg= LinearRegression().fit(X,y)
w= reg.coef_
c= reg.intercept_

xpoints = np.linspace(4,6)
ypoints = w[0] * xpoints + c;
plt.plot(xpoints, ypoints, 'g-')
plt.scatter(X, y,s=10)
plt.suptitle('Linear Regression IRIS Data')
plt.xlabel('Petal Length')
plt.ylabel('Petal Width')
plt.grid(1,which='both')
plt.axis('tight')
plt.show()

yPredict = reg.predict(X)
r2 = r2_score(y, yPredict)
print('Train R2 score =', r2)
print("\n")
